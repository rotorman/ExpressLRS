; ExpressLRS PlatformIO Project Configuration File

[platformio]
default_envs = Unified_ESP32_2400_TX_via_ETX


# ------------------------- COMMON ENV DEFINITIONS -----------------
[env]
#upload_port =
#upload_speed =
framework = arduino
extra_scripts =
	pre:python/build_flags.py
	python/build_env_setup.py
monitor_dtr = 0
monitor_rts = 0


[common_env_data]
build_src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<*.py> -<*test*.*>
build_flags = -Wall -Iinclude

# ------------------------- COMMON ESP32 DEFINITIONS -----------------

[env_common_esp32]
platform = espressif32@6.11.0
board = esp32dev
board_build.partitions = min_spiffs.csv
upload_speed = 460800
monitor_speed = 420000
upload_resetmethod = nodemcu
board_build.f_cpu = 240000000L
extra_scripts =
	${env.extra_scripts}
	pre:python/build_html.py
build_flags =
	-D CONFIG_TCPIP_LWIP=1
	-D BEARSSL_SSL_BASIC
	-D CONFIG_DISABLE_HAL_LOCKS=1
	-I ${PROJECTSRC_DIR}/hal
build_src_filter = ${common_env_data.build_src_filter} -<ESP8266*.*>
lib_deps =
	esphome/AsyncTCP-esphome @ 2.0.1 # use specific version - an update to this library breaks the build
	ottowinter/ESPAsyncWebServer-esphome @ 3.0.0
	bblanchon/ArduinoJson @ 7.0.4
	olikraus/U8g2 @ 2.34.4
	moononournation/GFX Library for Arduino @ 1.2.8
	SPIFFS

[env_common_esp32s3tx]
platform = espressif32@6.4.0
extends = env_common_esp32
board = esp32-s3-devkitc-1
build_flags =
	${env_common_esp32.build_flags}
	-D PLATFORM_ESP32_S3=1
	-D ARDUINO_USB_CDC_ON_BOOT

# ********************************
# Transmitter targets
# ********************************

# ESP32

[env:Unified_ESP32_2400_TX_via_ETX]
extends = env_common_esp32
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags}
	-include target/Unified_ESP32_TX.h
	-D VTABLES_IN_FLASH=1
	-O2
build_src_filter = ${env_common_esp32.build_src_filter} -<rx_*.cpp>

[env:Unified_ESP32_2400_TX_via_UART]
extends = env:Unified_ESP32_2400_TX_via_ETX

# ESP32 S3

[env:Unified_ESP32S3_2400_TX_via_ETX]
extends = env_common_esp32s3tx
build_flags =
	${env_common_esp32s3tx.build_flags}
	${common_env_data.build_flags}
	-include target/Unified_ESP32_TX.h
	-D VTABLES_IN_FLASH=1
	-O2
build_src_filter = ${env_common_esp32s3tx.build_src_filter} -<rx_*.cpp>

[env:Unified_ESP32S3_2400_TX_via_UART]
extends = env:Unified_ESP32S3_2400_TX_via_ETX
